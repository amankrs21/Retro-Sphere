name: CI/CD Pipeline for SonarCloud, Azure Web App, and Cloudflare Pages

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # 1. SonarCloud Analysis Job
  sonarcloud-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install
        working-directory: ./client

      - name: Run SonarCloud analysis
        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args:
            -Dsonar.projectKey=amankrs21_Retro-Sphere
            -Dsonar.organization=amankrs21
          projectBaseDir: .


  # 2. Express App Hosting Job (depends on SonarCloud success, but only runs on push to `main`)
  express-deployment:
    runs-on: ubuntu-latest
    needs: sonarcloud-analysis
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies for Express app
        run: npm install
        working-directory: ./server

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip


  # 3. Deploy to Azure Web App (depends on Express app deployment success)
  deploy-to-azure:
    runs-on: ubuntu-latest
    needs: express-deployment
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_1577C458E0304C228AACB6331C8E450E }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_6340B4CE5ABE4B1D87A409A9D12822BD }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_C20F351765074CD49E8F7A9634CC87EB }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'retro-sphere'
          slot-name: 'Production'
          package: ./server


  # 4. React App Hosting to Cloudflare (depends on Azure Web App deployment success)
  react-deployment:
    runs-on: ubuntu-latest
    needs: deploy-to-azure
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies for React app
        run: npm install
        working-directory: ./client

      - name: Build React app
        run: npm run build
        working-directory: ./client

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: 'retro-sphere'
          directory: 'client/dist'
